package main

import (
	"fmt"
	"os"
	"os/exec"
	sao "projet-red/code-game/character"
	"time"
)

func main() {
	Menu()
	sao.Quete1()
	sao.Quete()
}

func Menu() {
	fmt.Println("▓                                                                                  ▓")
	fmt.Println("▓                                                                                  ▓")
	fmt.Println("▓                                                                                  ▓")
	fmt.Println("▓                       ████████    ██████████    ██████████                       ▓")
	fmt.Println("▓                       ██          ██      ██    ██      ██                       ▓")
	fmt.Println("▓                       ██          ██      ██    ██      ██                       ▓")
	fmt.Println("▓                       ████████    ██████████    ██      ██                       ▓")
	fmt.Println("▓                             ██    ██      ██    ██      ██                       ▓")
	fmt.Println("▓                             ██    ██      ██    ██      ██                       ▓")
	fmt.Println("▓                       ████████    ██      ██    ██████████                       ▓")
	fmt.Println("▓                                                                                  ▓")
	fmt.Println("▓                               ~~SWORD ART ONLINE~~                               ▓")
	fmt.Println("▓                                                                                  ▓")
	fmt.Println("▓                                                                                  ▓")
	fmt.Println("▓                                                                                  ▓")
	time.Sleep(3 * time.Second)
	Clear()
	fmt.Println("                                                                                  ")
	fmt.Println("            █    █  █   █  █  █     ████  █████  █████  ███   █████")
	fmt.Println("            █       ██  █  █ █      █       █    █   █  █  █    █")
	fmt.Println("            █    █  █ █ █  ██       ████    █    █████  ████    █")
	fmt.Println("            █    █  █  ██  █ █         █    █    █   █  █   █   █")
	fmt.Println("            ███  █  █   █  █  █     ████    █    █   █  █    █  █", "\n")
	time.Sleep(1 * time.Second)
	for i := 1; i < 5; i++ {
		fmt.Println("CHARGEMENT : ", "\n")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		time.Sleep(10 * time.Millisecond)
		fmt.Printf("⚔ ")
		Clear()
		//
	}
	Menu_inter()

}

func Menu_inter() {
	var input_choix_menu int

	fmt.Println("    ▄             ▄▄▄  ▄▄▄▄▄  ▄▄▄▄▄▄                       ")
	fmt.Println("    ▒             █    █   █  █    █                   ")
	fmt.Println("    ▒             ▀▀█  █▀▀▀█  █    █                 ")
	fmt.Println("    ▒             ▄▄█  █   █  █▄▄▄▄█                       ")
	fmt.Println("◄■■■█■■  ⚔️===============================⚔️                                    ")
	fmt.Println("  ║ █                                           ")
	fmt.Println("  ╚ █▹     1- Solo                                        ")
	fmt.Println("    █ 		                                     ")
	fmt.Println("    █       2- Multijoueur arena                                     ")
	fmt.Println("    █                                           ")
	fmt.Println("    █       3- fermer                                    ")
	fmt.Println("    █                                           ")
	fmt.Println("    █                                           ")
	fmt.Println("    █                                            ")
	fmt.Println("    ▼                                           ")
	fmt.Scanln(&input_choix_menu)
	if input_choix_menu == 1 {
		Clear()
		sao.Create_Player()
	} else if input_choix_menu == 2 {
		Clear()
		fmt.Println("multijoueur indisponible")
	} else if input_choix_menu == 3 {
		fmt.Println("fin du jeu")
	}
}

func Clear() {
	cmd := exec.Command("cmd", "/c", "cls")
	cmd.Stdout = os.Stdout
	cmd.Run()
}
